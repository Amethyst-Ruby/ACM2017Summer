
H - Fence Repair（poj3253哈夫曼）
  Time Limit:2000MS     Memory Limit:65536KB     64bit IO Format:%I64d & %I64u  

Submit
 
Status
 
Practice
 
POJ 3253
 

 use MathJax to parse formulas


Description



Farmer John wants to repair a small length of the fence around the pasture. He measures the fence and finds that he needs N (1 ≤ N ≤ 20,000) planks of wood, each having some integer length Li (1 ≤ Li ≤ 50,000) units. He then purchases a single long board just long enough to saw into the N planks (i.e., whose length is the sum of the lengths Li). FJ is ignoring the "kerf", the extra length lost to sawdust when a sawcut is made; you should ignore it, too.

FJ sadly realizes that he doesn't own a saw with which to cut the wood, so he mosies over to Farmer Don's Farm with this long board and politely asks if he may borrow a saw.

Farmer Don, a closet capitalist, doesn't lend FJ a saw but instead offers to charge Farmer John for each of the N-1 cuts in the plank. The charge to cut a piece of wood is exactly equal to its length. Cutting a plank of length 21 costs 21 cents.

Farmer Don then lets Farmer John decide the order and locations to cut the plank. Help Farmer John determine the minimum amount of money he can spend to create the N planks. FJ knows that he can cut the board in various different orders which will result in different charges since the resulting intermediate planks are of different lengths.


Input


Line 1: One integer N, the number of planks 
Lines 2.. N+1: Each line contains a single integer describing the length of a needed plank 


Output


Line 1: One integer: the minimum amount of money he must spend to make N-1 cuts 


Sample Input

3
8
5
8


Sample Output

34


Hint


He wants to cut a board of length 21 into pieces of lengths 8, 5, and 8. 
The original board measures 8+5+8=21. The first cut will cost 21, and should be used to cut the board into pieces measuring 13 and 8. The second cut will cost 13, and should be used to cut the 13 into 8 and 5. This would cost 21+13=34. If the 21 was cut into 16 and 5 instead, the second cut would cost 16 for a total of 37 (which is more than 34).

题目大意：FJ需要修补牧场的围栏，他需要 N 块长度为 Li 的木头（N planks of woods）。开始时，FJ只有一块无限长的木板，因此他需要把无限长的木板锯成 N 块长度

为 Li 的木板，Farmer Don提供FJ锯子，但必须要收费的，收费的标准是对应每次据出木块的长度，比如说测试数据中 5 8 8，一开始，FJ需要在无限长的木板上锯下长度 21 的木板（5+8+8=21），第二次锯下长度为 5 的木板，第三次锯下长度为 8 的木板，至此就可以将长度分别为 5 8 8 的木板找出


题目可以转化为Huffman树构造问题 ：

给定 N planks of woods，

1. 　　在 N planks 中每次找出两块长度最短的木板，然后把它们合并，加入到集合A中，

2.　　在集合中找出两块长度最短的木板，合并加入到集合A中，重复过程，直到集合A中只剩下一个元素

显然，通过每次选取两块长度最短的木板，合并，最终必定可以合并出长度为 Sum（Li）的木板，并且可以保证总的耗费最少



#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<string.h>
#include <cstdio>
#include <cstring>
#include <queue>
#include <stack>
#include <cmath>
#define dashu 0x3f3f3f3f
using namespace std;
long long int sum=0,temp;
int main()
{
          priority_queue<int,vector< int >,greater < int > >pq;    //这个东西小数是有优先级的！！很好用，这样写是优先出列小数据
          int n,a,b;      //priority_queue<int> p;  默认是优先输出大数据的
          cin>>n;
          while(n--)
          {
                  cin>>a;
                  pq.push(a);
          }
          if(pq.size()==1)
          {
                  temp=pq.top();
                  sum+=temp;
                  pq.pop();
          }
          while(pq.size()>1)
          {
                  a=pq.top();
                  pq.pop();

                  b=pq.top();
                  pq.pop();

                  temp=a+b;
                  pq.push(temp);

                  sum=sum+temp;
          }
          cout<<sum<<endl;
        return 0;
}
