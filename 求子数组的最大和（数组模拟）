 求子数组的最大和（栈和队列）
  Time Limit:1000MS     Memory Limit:1024000KB     64bit IO Format:%lld & %llu  

Submit
 
Status
 
Practice
 
SDIBT 2650
 

 use MathJax to parse formulas


Description



题目：输入一个整形数组，数组里有正数也有负数。数组中连续的一个或多个整数组成一个子数组，每个子数组都有一个和。求所有子数组的和的最大值。 

例如输入的数组为1, -2, 3, 10, -4, 7, 2, -5，和最大的子数组为3, 10, -4, 7, 2，
因此输出为该子数组的和18。 




Input



输入：

1 -2 3 10 -4 7 2 -5



Output



输出：

18



Sample Input

1 -2 3 10 -4 7 2 -5



Sample Output

18


#include<iostream>
using namespace std;
int max1(int a,int b)
{
	if(a>b) return a;
	else return b;
}
int zuida(int *a,int len)
{
	int max = 0;
	for(int i=1;i<len;i++) 
	{
		a[i]=max1(a[i],a[i-1]+a[i]);
		if(max<a[i]) max=a[i];
	}
	return max;                                  //最后的a数组为{1，-1,3,13,9,16,18,13}；不太理解，以后再说吧！
}
int main()
{
	int a[8]={1,-2,3,10,-4,7,2,-5};       
	cout<<zuida(a,8)<<endl;
	return 0;
} 

