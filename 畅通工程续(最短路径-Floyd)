HDU 1874
畅通工程续

Time Limit: 3000/1000 MS (Java/Others)    Memory Limit: 32768/32768 K (Java/Others)
Total Submission(s): 55042    Accepted Submission(s): 20610


Problem Description
某省自从实行了很多年的畅通工程计划后，终于修建了很多路。不过路多了也不好，每次要从一个城镇到另一个城镇时，都有许多种道路方案可以选择，而某些方案要比另一些方案行走的距离要短很多。这让行人很困扰。

现在，已知起点和终点，请你计算出要从起点到终点，最短需要行走多少距离。
 

Input
本题目包含多组数据，请处理到文件结束。
每组数据第一行包含两个正整数N和M(0<N<200,0<M<1000)，分别代表现有城镇的数目和已修建的道路的数目。城镇分别以0～N-1编号。
接下来是M行道路信息。每一行有三个整数A,B,X(0<=A,B<N,A!=B,0<X<10000),表示城镇A和城镇B之间有一条长度为X的双向道路。
再接下一行有两个整数S,T(0<=S,T<N)，分别代表起点和终点。
 

Output
对于每组数据，请在一行里输出最短需要行走的距离。如果不存在从S到T的路线，就输出-1.
 

Sample Input
3 3
0 1 1
0 2 3
1 2 1
0 2
3 1
0 1 1
1 2
 

Sample Output
2
-1
 

Author
linle
 

Source
2008浙大研究生复试热身赛（2）——全真模拟




#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<string.h>
#include <cstdio>
#include <cstring>
#include <queue>
#include <stack>
#include<vector>
#include <cmath>
using namespace std;

#define INF 0x3f3f3f3f
#define maxn 120

int map[maxn][maxn];
int N,M;

void Floyd()
{
    for(int k=0; k<N; k++)
        for(int i=0; i<N; i++)
            for(int j=0; j<N; j++)
                if(map[i][j]>map[i][k]+map[k][j])
                    map[i][j]=map[i][k]+map[k][j];//找最短    
}

void initialization()
{
    for(int i=0; i<=N; i++)
        for(int j=0; j<=N; j++)
            i == j ? map[i][j] = 0 : map[i][j] = INF;
    while(M--)
    {
        int A,B,C;
        scanf("%d%d%d",&A,&B,&C);
        if(map[A][B]>C)
        {
            map[A][B]=C;
            map[B][A]=C;
        }
    }
}
int main()
{
        while(~scanf("%d%d",&N,&M) )        
            {
                //if(N==0&&M==0) break;   如果我用这个语句的话就会超时.
                initialization();
                Floyd();
                int from,to;
                scanf("%d%d",&from,&to);
                map[from][to] == INF ? printf("-1\n") : printf("%d\n",map[from][to]);
            }
            return 0;
}
